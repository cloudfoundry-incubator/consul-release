try {
    $BOSH_INSTALL_TARGET = Resolve-Path $env:BOSH_INSTALL_TARGET
} catch {
    $Host.UI.WriteErrorLine($_.Exception.Message)
    Exit 1
}

$env:GOROOT="C:\var\vcap\packages\golang1.6-windows\go"
$env:GOPATH="${BOSH_INSTALL_TARGET}"
$env:PATH="${env:GOROOT}\bin;${env:PATH}"
$env:GO15VENDOREXPERIMENT=1
$pkg_path="github.com\cloudfoundry-incubator\consul-release\src\confab\confab"

function CompileGo {
    go.exe install "${pkg_path}"
    $?
}

try {
    New-Item -ItemType "directory" -Force "${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry-incubator\consul-release\src"
    robocopy /E confab "${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry-incubator\consul-release\src\confab"

    if (-Not (CompileGo)) {
        $Host.UI.WriteErrorLine("Error compiling: ${pkg_path}")
        Exit 1
    }

    New-Item -ItemType "directory" -Force "emptyfolder"
    robocopy /PURGE "emptyfolder" "${BOSH_INSTALL_TARGET}/src"
    robocopy /PURGE "emptyfolder" "${BOSH_INSTALL_TARGET}/pkg"

    Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/src"
    Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/pkg"
    Remove-Item -Force -Recurse "emptyfolder"
} catch {
    $Host.UI.WriteErrorLine($_.Exception.Message)
    Exit 1
}

Exit 0
